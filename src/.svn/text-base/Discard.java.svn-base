/*
 * Discard.java
 *
 * Created on 10/08/2007. Copyright Raphael de Preval rdepreval@gmail.com
 *
 * Classe permettant de repértorier les tuiles jetées
 * 
 * This file is part of Open Mahjong.
 * 
 * Open Mahjong is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Open Mahjong is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Open Mahjong.  If not, see <http://www.gnu.org/licenses/>.
 */
import javax.swing.JLabel;


public class Discard {

	int tableau[][] = new int[9][6];		// tableau pour compter les tuiles jetées (9 numéros sur 6 couleurs)
	JLabel labelDiscard[] = new JLabel[14];	// label pour l'affichage du nb de tuiles jetée pour le joueur

	public Discard() {
		for(int i=0; i<9; i++){
			for(int j=0;j<6;j++){
				tableau[i][j] = 0;
			}
		}
		
		for(int i=0; i<14; i++){
			labelDiscard[i] = new JLabel();
			labelDiscard[i].setBounds(Main.X+(i*37)+15,Main.Y+52,10,10);	// placé sous les tuiles du joueur
			labelDiscard[i].setText("");
		}
	}
	
	/**
	 * RaZ du tableau
	 */
	public void init(){
		for(int i=0; i<9; i++){
			for(int j=0;j<6;j++){
				tableau[i][j] = 0;
			}
		}
	}

//	/**
//	 * transforme le caractère c en entier pour le tableau
//	 */
//	private int couleurToInt(char c){
//		int result;
//
//		switch(c){
//		case 'b':
//			result = 0;
//			break;
//		case 'c':
//			result = 1;
//			break;
//		case 'r':
//			result = 2;
//			break;
//		case 'v':
//			result = 3;
//			break;
//		case 'd':
//			result = 4;
//			break;
//		default:
//			result = 5; 
//		break;
//		}
//
//		return result;
//	}

//	/**
//	 * ajoute la tuile t au tableau
//	 */
//	public void add(Tuile t){
//		tableau[t.chiffre-1][couleurToInt(t.couleur)] +=1;
//	}
	
	/**
	 * ajoute nb fois la tuile t au tableau
	 */
	public void add(Tuile t, int nb){
//		tableau[t.chiffre-1][couleurToInt(t.couleur)] +=nb;
		tableau[t.chiffre-1][t.valeurCouleur()-1] +=nb;
	}

	/**
	 * affiche le nombre de tuile jetée pour chaque tuile de la mainCache
	 * si l'option est activée
	 */
	public void affiche(Jeu main){
		int cpt=0;
		for(int i=0; i<14; i++){
			labelDiscard[i].setText("");
		}
		if(Main.montreDiscard){
			for(int i=0; i<14; i++){
				for(int j=0; j<main.figures[i].nbTuile; j++){
					//labelDiscard[cpt].setText(""+tableau[main.figures[i].chiffre()-1][couleurToInt(main.figures[i].couleur())]);
					labelDiscard[cpt].setText(""+nbJet(main.figures[i].tuile));
					cpt++;
				}
			}
		}
	}
	
	/**
	 * renvoie le nombre de fois que la tuile t a été jetée
	 */
	public int nbJet(Tuile t){
//		return tableau[t.chiffre-1][couleurToInt(t.couleur)];
		int valeur = t.valeurCouleur();
		if(valeur>0 && valeur<7) return tableau[t.chiffre-1][t.valeurCouleur()-1];
		else return 0;
	}

}
